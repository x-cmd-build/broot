name: x pkg build broot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:


jobs:
  build:
    runs-on: macos-latest
    env:
      github_token: ${{ secrets.MINIMUM_PRIVILEGE_TOKEN }}
      ssh_key: ${{ secrets.REPO_SSH_KEY }}
      git_user: tzw-my
      git_email: tzw@x-cmd.com
      tag: v0.0.0
    steps:
      - name: main
        uses: x-cmd/action@main
        with:
          code: |
            x gh token $github_token
            x log init broot_build
            git clone https://github.com/Canop/broot.git
            cd broot
            cargo build -r && (
              broot_build:info "cargo build success"
              curl -LO https://github.com/Canop/broot/releases/download/v1.21.3/broot_1.21.3.zip
              unzip -y broot_1.21.3.zip
              mkdir -p x86_64-apple-darwin
              mv target/release/broot x86_64-apple-darwin/
              
              broot_build:info "$(pwd)"
              broot_build:info "$(ls -lha)"

              tar -Jcvf x86_64-linux.tar.xz x86_64-linux/broot
              tar -Jcvf x86_64-apple-darwin.tar.xz x86_64-apple-darwin/broot
              tar -Jcvf x86_64-pc-windows-gnu.tar.xz x86_64-pc-windows-gnu/broot
              
              git clone git@github.com:broot.git
              cd broot && {
                git tag $tag
                git push --tags
              }

              release_id="$(x gh repo release create --tag $tag -j --repo x-cmd-build/broot | x jo .id)"
              x gh repo release attachment upload --repo x-cmd-build/broot --release_id "${release_id}" x86_64-linux.tar.xz 
              x gh repo release attachment upload --repo x-cmd-build/broot --release_id "${release_id}" x86_64-apple-darwin.tar.xz  
              x gh repo release attachment upload --repo x-cmd-build/broot --release_id "${release_id}" x86_64-pc-windows-gnu.tar.xz 
            )